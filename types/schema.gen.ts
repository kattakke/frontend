/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/me": {
    /**
     * Returns me
     * @description Returns me
     */
    get: operations["authMe"];
  };
  "/auth/login": {
    /**
     * Returns me
     * @description Returns me
     */
    post: operations["authLogin"];
  };
  "/auth/logout": {
    /**
     * logout
     * @description logout
     */
    patch: operations["authLogout"];
  };
  "/users": {
    /**
     * register
     * @description register
     */
    post: operations["userRegister"];
  };
  "/users/{userId}": {
    /**
     * get user info
     * @description get user info
     */
    get: operations["getUserInfo"];
    /**
     * delete user info
     * @description delete user info
     */
    delete: operations["deleteUserInfo"];
    /**
     * patch user info
     * @description patch user info
     */
    patch: operations["patchUserInfo"];
  };
  "/users/{userId}/shelf": {
    /**
     * get user shelf
     * @description get user shelf
     */
    get: operations["getUserShelf"];
  };
  "/books": {
    /**
     * post book info
     * @description post book info
     */
    post: operations["postBook"];
  };
  "/books/{bookId}": {
    /**
     * get book info
     * @description get book info
     */
    get: operations["getBookInfo"];
    /**
     * delete book info
     * @description delete book info
     */
    delete: operations["deleteBookInfo"];
    /**
     * patch book info
     * @description patch book info
     */
    patch: operations["patchBookInfo"];
  };
  "/search": {
    /**
     * search book
     * @description search book
     */
    get: operations["getSearchBook"];
  };
  "/health": {
    /**
     * Health Check API
     * @description Always return 200
     */
    get: operations["healthCheck"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Book: {
      /** Format: UUID */
      bookdId?: string;
      isbn?: string | null;
      title?: string;
      author?: string | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    User: {
      /** Format: UUID */
      userId?: string;
      name?: string;
      password?: string;
      "jwt-secret"?: string;
      /** Format: UUID */
      shelf?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    Shelf: {
      /** Format: UUID */
      shelfId?: string;
      books?: string[];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    ApiResponse: {
      /** Format: int32 */
      code?: number;
      type?: string;
      message?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /**
   * Returns me
   * @description Returns me
   */
  authMe: {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  /**
   * Returns me
   * @description Returns me
   */
  authLogin: {
    requestBody?: {
      content: {
        "application/json": {
          id?: string;
          password?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  /**
   * logout
   * @description logout
   */
  authLogout: {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  /**
   * register
   * @description register
   */
  userRegister: {
    requestBody?: {
      content: {
        "application/json": {
          id?: string;
          password?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  /**
   * get user info
   * @description get user info
   */
  getUserInfo: {
    parameters: {
      path: {
        /** @description ID of user */
        userId: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  /**
   * delete user info
   * @description delete user info
   */
  deleteUserInfo: {
    parameters: {
      path: {
        /** @description ID of user */
        userId: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  /**
   * patch user info
   * @description patch user info
   */
  patchUserInfo: {
    parameters: {
      path: {
        /** @description ID of user */
        userId: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  /**
   * get user shelf
   * @description get user shelf
   */
  getUserShelf: {
    parameters: {
      query?: {
        /** @description The title of book */
        title?: string;
        /** @description The tag of book */
        tag?: string;
        /** @description The isbn of book */
        isbn?: string;
      };
      path: {
        /** @description ID of user */
        userId: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": string[];
        };
      };
    };
  };
  /**
   * post book info
   * @description post book info
   */
  postBook: {
    requestBody?: {
      content: {
        "application/json": {
          isbn?: string;
          title?: string;
          author?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["Book"];
        };
      };
    };
  };
  /**
   * get book info
   * @description get book info
   */
  getBookInfo: {
    parameters: {
      path: {
        /** @description ID of book */
        bookId: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["Book"];
        };
      };
    };
  };
  /**
   * delete book info
   * @description delete book info
   */
  deleteBookInfo: {
    parameters: {
      path: {
        /** @description ID of book */
        bookId: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
  /**
   * patch book info
   * @description patch book info
   */
  patchBookInfo: {
    parameters: {
      path: {
        /** @description ID of book */
        bookId: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          isbn?: string;
          title?: string;
          author?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["Book"];
        };
      };
    };
  };
  /**
   * search book
   * @description search book
   */
  getSearchBook: {
    parameters: {
      query?: {
        /** @description The title of book */
        title?: string;
        /** @description The isbn of book */
        isbn?: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": {
            isbn?: string;
            title?: string;
            author?: string;
          };
        };
      };
    };
  };
  /**
   * Health Check API
   * @description Always return 200
   */
  healthCheck: {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          "application/json": components["schemas"]["ApiResponse"];
        };
      };
    };
  };
}
